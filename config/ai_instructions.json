{
  "general_instructions": [
    "Teste deine Lösung mit den Beispielen. ",
    "Contnet should be in German. "
  ],
  "prompts": {
    "generate_scheme": [
      "Ich will einen Haidenhain Zyklus in Gcode umwandeln. ",
      "Gehe dafür über den Ablauf des Zyklus und gebe mir die Schritte wiefolgt beschrieben zurück",
      "Gib mir eine json Liste von GCode Operationen zurück. ",
      "Verwende möglichst nur die einfachsten GCode Befehle. ",
      "Eine GCode Operation ist ein json Objekt hat einen key \"code\" und einen key \"args\". ",
      "Es stehen für den Zyklus bereits die Position am Anfang des Zyklus mit den Parameter X, Y und Z zur Verfügung. Die Drehgeschwindigkeit steht durch den Parameter F zur verfügung. Diese können wie die Q-Parameter verwendet werden. ",
      "In args stehen die Argumente die der code benötigt. Diese Argumenete sind String elemente und werden mit den Q Parametern angegeben. Die Q-Parameter müssen innerhalb {} Klammern stehen, da diese von python verwendet werden. Wenn bereits klammern ausenrum sind, dann werden keine Klammern mehr direkt um die Parameter benötigt",
      "Du kannst auch math expressions benutzen, musst aber math.funktion benutzen. Zum Beispiel: math.sin({Q251})",
      "Jede Python Expression inklusive jedes verwendeten Parameters außer die if und loop Bedingungen müssen in {} Klammern stehen.",
      "Innerhalb der loop oder if bodys können können weitere loop oder if Bedingungen verwendet werden. ",
      "Für komplexere Zusammenhänge kann im String Python Syntax verwendet werden. Zum Beispiel: \"{Q251 or 0}\"",
      "Überlege gut ob du trigonmoische Formeln verwenden musst, oder ob es auch ohne geht. ",
      "Gebe nur das json aus und nichts anderes. ",
      "Das json Objekt muss nach folgendem Json-Schema aufgebaut werden: ",
      "{",
      "  'type': 'array',",
      "  'items': [",
      "      {",
      "          'type': 'object',",
      "          'properties': {",
      "              'code': {",
      "                  'type': 'string' // must be a Gcode command",
      "              },",
      "              'args': {",
      "                  'type': 'array',",
      "                  'items': [",
      "                      {",
      "                          'type': 'string'",
      "                      }",
      "                  ]",
      "              }",
      "          },",
      "          'required': [",
      "              'code',",
      "              'args'",
      "          ]",
      "      },",
      "      {",
      "          'type': 'object',",
      "          'properties': {",
      "              'loop': {",
      "                  'type': 'string' // value is looping condition. use i as looping index. this must be a Python expression. i can be used in body",
      "              },",
      "              'body': {",
      "                  '$ref': '#/items'",
      "              }",
      "          },",
      "          'required': [",
      "              'loop',",
      "              'body'",
      "          ]",
      "      },",
      "      {",
      "          'type': 'object',",
      "          'properties': {",
      "              'if': {",
      "                  'type': 'string' // value is if condition. this must be a Python expression",
      "              },",
      "              'body': {",
      "                  '$ref': '#/items'",
      "              }",
      "          },",
      "          'required': [",
      "              'loop',",
      "              'body'",
      "          ]",
      "      },",
      "  ]",
      "}",
      "Entnehme die Zyklusdefinition aus folgenden Texten:"
    ],
    "get_cycle_description": {
      "format": [
        "Die Zyklusbeschreibung soll im Json format zurück gegben werden. ",
        "Allerdings nur als einzelner String"
      ],
      "instructions": [
        "Gib mir die Zyklusbeschreibugn zurück.",
        "Diese ist direkt unter dem Wort Zyklsuablauf bevor die Schritte anfangen. "
      ]
    },
    "get_cycle_steps": {
      "format": [
        "Gib mir im json format mit dem key \"description\" die Zyklusablaufbeschreibung zurück. ",
        "Diese kommt als erstes unter Zyklusablauf ",
        "Unter dem key \"steps\" sollen die tatsächlichen Zyklusabläufe in einer liste zurückgegeben werden. ",
        "Jeder Schritt beginnt immer mit einer Zahl und soll ein einziges Listenelement beziehungsweise String sein. ",
        "Gebe nur das json aus und nicht anderes. ",
        "Entnehme die Informationen aus folgenden Text Blöcken:"
      ],
      "instructions": ["Mach wie es im format steht"]
    },

    "get_cycle_params": {
      "format": [
        "Gib mir eine String list im Json format zurück mit jedem Zyklusparameter und der Beschreibung.",
        "Alle wichtigen Zyklusparameter sind unter Zyklusparameter, verwende nicht die Parameter die nicht unter Zyklusparameter gelistet sind",
        "Die Parameter beginnen immer mit Q und dann einer Zahl, danach folgt der Name und dann die Beschreibung",
        "Ein List element ist immer Q-Parameter Name Beschreibung",
        "Gebe nur das json aus und nichts anderes.",
        "Entnehme die Informatinen aus folgenden Text Blöcken:"
      ],
      "instructions": ["Mach wie es im format steht"]
    }
  }
}
